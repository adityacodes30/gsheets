/**
* @license Apache-2.0
*
* Copyright (c) 2023 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var setReadOnly = require( '@stdlib/utils-define-read-only-property' );
var bbinary2d = require( '@stdlib/array-base-broadcasted-binary2d' );
var bternary2d = require( '@stdlib/gsheets/array/broadcasted-ternary2d' ); // FIXME: replace one stdlib package published
var broadcastShapes = require( '@stdlib/ndarray-base-broadcast-shapes' );
var filled2d = require( '@stdlib/array-base-filled2d' );
var filled2dBy = require( '@stdlib/array-base-filled2d-by' );
var flattenArray = require( '@stdlib/gsheets/array/flatten2d' );
var iterator2array = require( '@stdlib/array-from-iterator' );
var linspace = require( '@stdlib/array-linspace' );
var normalizeBroadcastArgs = require( '@stdlib/gsheets/array/normalize-broadcast-args' );
var ones2d = require( '@stdlib/array-base-ones2d' );
var unary2d = require( '@stdlib/array-base-unary2d' );
var zeros = require( '@stdlib/array-base-zeros' );
var zeros2d = require( '@stdlib/array-base-zeros2d' );


// MAIN //

/**
* Adds APIs to a provided namespace.
*
* @private
* @param {Object} dest - destination namespace
* @returns {Object} destination namespace
*/
function namespace( dest ) {
	setReadOnly( dest, 'bbinary2d', bbinary2d );
	setReadOnly( dest, 'bternary2d', bternary2d );
	setReadOnly( dest, 'broadcastShapes', broadcastShapes );
	setReadOnly( dest, 'filled2d', filled2d );
	setReadOnly( dest, 'filled2dBy', filled2dBy );
	setReadOnly( dest, 'flattenArray', flattenArray );
	setReadOnly( dest, 'iterator2array', iterator2array );
	setReadOnly( dest, 'linspace', linspace );
	setReadOnly( dest, 'normalizeBroadcastArgs', normalizeBroadcastArgs );
	setReadOnly( dest, 'ones2d', ones2d );
	setReadOnly( dest, 'unary2d', unary2d );
	setReadOnly( dest, 'zeros', zeros );
	setReadOnly( dest, 'zeros2d', zeros2d );
	return dest;
}


// EXPORTS //

module.exports = namespace;

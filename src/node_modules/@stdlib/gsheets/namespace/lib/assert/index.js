/**
* @license Apache-2.0
*
* Copyright (c) 2022 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var setReadOnly = require( '@stdlib/utils-define-read-only-property' );
var isBetween = require( '@stdlib/gsheets/assert/is-between' );
var isBoolean = require( '@stdlib/gsheets/assert/is-boolean' );
var isBroadcastCompatible = require( '@stdlib/gsheets/assert/is-broadcast-compatible' );
var isBroadcastCompatibleWith = require( '@stdlib/gsheets/assert/is-broadcast-compatible-with' );
var isDefined = require( '@stdlib/gsheets/assert/is-defined' );
var isGreaterThan = require( '@stdlib/gsheets/assert/is-greater-than' );
var isGreaterThanEqual = require( '@stdlib/gsheets/assert/is-greater-than-equal' );
var isInteger = require( '@stdlib/gsheets/assert/is-integer' );
var isLessThan = require( '@stdlib/gsheets/assert/is-less-than' );
var isLessThanEqual = require( '@stdlib/gsheets/assert/is-less-than-equal' );
var isNonNegativeInteger = require( '@stdlib/gsheets/assert/is-nonnegative-integer' );
var isNonNegativeNumber = require( '@stdlib/gsheets/assert/is-nonnegative-number' );
var isNumber = require( '@stdlib/gsheets/assert/is-number' );
var isOneOf = require( '@stdlib/gsheets/assert/is-one-of' );
var isPositiveInteger = require( '@stdlib/gsheets/assert/is-positive-integer' );
var isPositiveNumber = require( '@stdlib/gsheets/assert/is-positive-number' );
var isProbability = require( '@stdlib/gsheets/assert/is-probability' );
var isRange = require( '@stdlib/gsheets/assert/is-range' );
var isRange1d = require( '@stdlib/gsheets/assert/is-range1d' );
var isSameShape = require( '@stdlib/gsheets/assert/is-same-shape' );
var isString = require( '@stdlib/gsheets/assert/is-string' );
var isValidShape = require( '@stdlib/gsheets/assert/is-valid-shape' );
var unrecognizedOptionName = require( '@stdlib/gsheets/assert/unrecognized-option-name' );
var verifyCommonPRNGArgs = require( '@stdlib/gsheets/assert/verify-common-prng-args' );
var base = require( './base' );


// MAIN //

/**
* Adds APIs to a provided namespace.
*
* @private
* @param {Object} dest - destination namespace
* @returns {Object} destination namespace
*/
function namespace( dest ) {
	setReadOnly( dest, 'isBetween', isBetween );
	setReadOnly( dest, 'isBoolean', isBoolean );
	setReadOnly( dest, 'isBroadcastCompatible', isBroadcastCompatible );
	setReadOnly( dest, 'isBroadcastCompatibleWith', isBroadcastCompatibleWith );
	setReadOnly( dest, 'isDefined', isDefined );
	setReadOnly( dest, 'isGreaterThan', isGreaterThan );
	setReadOnly( dest, 'isGreaterThanEqual', isGreaterThanEqual );
	setReadOnly( dest, 'isInteger', isInteger );
	setReadOnly( dest, 'isLessThan', isLessThan );
	setReadOnly( dest, 'isLessThanEqual', isLessThanEqual );
	setReadOnly( dest, 'isNonNegativeInteger', isNonNegativeInteger );
	setReadOnly( dest, 'isNonNegativeNumber', isNonNegativeNumber );
	setReadOnly( dest, 'isNumber', isNumber );
	setReadOnly( dest, 'isOneOf', isOneOf );
	setReadOnly( dest, 'isPositiveInteger', isPositiveInteger );
	setReadOnly( dest, 'isPositiveNumber', isPositiveNumber );
	setReadOnly( dest, 'isProbability', isProbability );
	setReadOnly( dest, 'isRange', isRange );
	setReadOnly( dest, 'isRange1d', isRange1d );
	setReadOnly( dest, 'isSameShape', isSameShape );
	setReadOnly( dest, 'isString', isString );
	setReadOnly( dest, 'isValidShape', isValidShape );
	setReadOnly( dest, 'unrecognizedOptionName', unrecognizedOptionName );
	setReadOnly( dest, 'verifyCommonPRNGArgs', verifyCommonPRNGArgs );

	setReadOnly( dest, 'base', base( {} ) );

	return dest;
}


// EXPORTS //

module.exports = namespace;

/**
* @license Apache-2.0
*
* Copyright (c) 2023 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

/* This is a generated file. Do not edit directly. */

'use strict';

// MODULES //

var setReadOnly = require( '@stdlib/utils-define-read-only-property' );
var abs = require( '@stdlib/math-base-special-abs' );
var abs2 = require( '@stdlib/math-base-special-abs2' );
var acos = require( '@stdlib/math-base-special-acos' );
var acosh = require( '@stdlib/math-base-special-acosh' );
var acot = require( '@stdlib/math-base-special-acot' );
var acovercos = require( '@stdlib/math-base-special-acovercos' );
var acoversin = require( '@stdlib/math-base-special-acoversin' );
var acsc = require( '@stdlib/math-base-special-acsc' );
var acsch = require( '@stdlib/math-base-special-acsch' );
var ahavercos = require( '@stdlib/math-base-special-ahavercos' );
var ahaversin = require( '@stdlib/math-base-special-ahaversin' );
var asin = require( '@stdlib/math-base-special-asin' );
var asinh = require( '@stdlib/math-base-special-asinh' );
var atan = require( '@stdlib/math-base-special-atan' );
var atanh = require( '@stdlib/math-base-special-atanh' );
var avercos = require( '@stdlib/math-base-special-avercos' );
var aversin = require( '@stdlib/math-base-special-aversin' );
var bernoulli = require( '@stdlib/math-base-special-bernoulli' );
var besselj0 = require( '@stdlib/math-base-special-besselj0' );
var besselj1 = require( '@stdlib/math-base-special-besselj1' );
var bessely0 = require( '@stdlib/math-base-special-bessely0' );
var bessely1 = require( '@stdlib/math-base-special-bessely1' );
var binet = require( '@stdlib/math-base-special-binet' );
var cbrt = require( '@stdlib/math-base-special-cbrt' );
var ceil = require( '@stdlib/math-base-special-ceil' );
var ceil10 = require( '@stdlib/math-base-special-ceil10' );
var ceil2 = require( '@stdlib/math-base-special-ceil2' );
var cos = require( '@stdlib/math-base-special-cos' );
var cosh = require( '@stdlib/math-base-special-cosh' );
var cosm1 = require( '@stdlib/math-base-special-cosm1' );
var cospi = require( '@stdlib/math-base-special-cospi' );
var cot = require( '@stdlib/math-base-special-cot' );
var coth = require( '@stdlib/math-base-special-coth' );
var covercos = require( '@stdlib/math-base-special-covercos' );
var coversin = require( '@stdlib/math-base-special-coversin' );
var deg2rad = require( '@stdlib/math-base-special-deg2rad' );
var digamma = require( '@stdlib/math-base-special-digamma' );
var eta = require( '@stdlib/math-base-special-dirichlet-eta' );
var sin = require( '@stdlib/math-base-special-sin' );
var sqrt = require( '@stdlib/math-base-special-sqrt' );
var zeta = require( '@stdlib/math-base-special-riemann-zeta' );


// MAIN //

/**
* Adds APIs to a provided namespace.
*
* @private
* @param {Object} dest - destination namespace
* @returns {Object} destination namespace
*/
function namespace( dest ) {
	setReadOnly( dest, 'abs', abs );
	setReadOnly( dest, 'abs2', abs2 );
	setReadOnly( dest, 'acos', acos );
	setReadOnly( dest, 'acosh', acosh );
	setReadOnly( dest, 'acot', acot );
	setReadOnly( dest, 'acovercos', acovercos );
	setReadOnly( dest, 'acoversin', acoversin );
	setReadOnly( dest, 'acsc', acsc );
	setReadOnly( dest, 'acsch', acsch );
	setReadOnly( dest, 'ahavercos', ahavercos );
	setReadOnly( dest, 'ahaversin', ahaversin );
	setReadOnly( dest, 'asin', asin );
	setReadOnly( dest, 'asinh', asinh );
	setReadOnly( dest, 'atan', atan );
	setReadOnly( dest, 'atanh', atanh );
	setReadOnly( dest, 'avercos', avercos );
	setReadOnly( dest, 'aversin', aversin );
	setReadOnly( dest, 'bernoulli', bernoulli );
	setReadOnly( dest, 'besselj0', besselj0 );
	setReadOnly( dest, 'besselj1', besselj1 );
	setReadOnly( dest, 'bessely0', bessely0 );
	setReadOnly( dest, 'bessely1', bessely1 );
	setReadOnly( dest, 'binet', binet );
	setReadOnly( dest, 'cbrt', cbrt );
	setReadOnly( dest, 'ceil', ceil );
	setReadOnly( dest, 'ceil10', ceil10 );
	setReadOnly( dest, 'ceil2', ceil2 );
	setReadOnly( dest, 'cos', cos );
	setReadOnly( dest, 'cosh', cosh );
	setReadOnly( dest, 'cosm1', cosm1 );
	setReadOnly( dest, 'cospi', cospi );
	setReadOnly( dest, 'cot', cot );
	setReadOnly( dest, 'coth', coth );
	setReadOnly( dest, 'covercos', covercos );
	setReadOnly( dest, 'coversin', coversin );
	setReadOnly( dest, 'deg2rad', deg2rad );
	setReadOnly( dest, 'digamma', digamma );
	setReadOnly( dest, 'eta', eta );
	setReadOnly( dest, 'sin', sin );
	setReadOnly( dest, 'sqrt', sqrt );
	setReadOnly( dest, 'zeta', zeta );
	return dest;
}


// EXPORTS //

module.exports = namespace;

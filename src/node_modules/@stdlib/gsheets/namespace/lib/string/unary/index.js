/**
* @license Apache-2.0
*
* Copyright (c) 2023 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

/* This is a generated file. Do not edit directly. */

'use strict';

// MODULES //

var setReadOnly = require( '@stdlib/utils-define-read-only-property' );
var camelcase = require( '@stdlib/string-camelcase' );
var capitalize = require( '@stdlib/string-capitalize' );
var constantcase = require( '@stdlib/string-constantcase' );
var kebabcase = require( '@stdlib/string-kebabcase' );
var lowercase = require( '@stdlib/string-lowercase' );
var pascalcase = require( '@stdlib/string-pascalcase' );
var snakecase = require( '@stdlib/string-snakecase' );
var startcase = require( '@stdlib/string-startcase' );
var uncapitalize = require( '@stdlib/string-uncapitalize' );
var uppercase = require( '@stdlib/string-uppercase' );


// MAIN //

/**
* Adds APIs to a provided namespace.
*
* @private
* @param {Object} dest - destination namespace
* @returns {Object} destination namespace
*/
function namespace( dest ) {
	setReadOnly( dest, 'camelcase', camelcase );
	setReadOnly( dest, 'capitalize', capitalize );
	setReadOnly( dest, 'constantcase', constantcase );
	setReadOnly( dest, 'kebabcase', kebabcase );
	setReadOnly( dest, 'lowercase', lowercase );
	setReadOnly( dest, 'pascalcase', pascalcase );
	setReadOnly( dest, 'snakecase', snakecase );
	setReadOnly( dest, 'startcase', startcase );
	setReadOnly( dest, 'uncapitalize', uncapitalize );
	setReadOnly( dest, 'uppercase', uppercase );
	return dest;
}


// EXPORTS //

module.exports = namespace;

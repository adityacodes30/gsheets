/**
* @license Apache-2.0
*
* Copyright (c) 2023 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var base = require( '@stdlib/ndarray-base-unary' );
var format = require( '@stdlib/string-format' );
var wrap = require( '@stdlib/gsheets/math/tools/wrap-unary' );


// MAIN //

/**
* Applies a unary function which accepts a number and returns a number to an input ndarray and assigns results to an output ndarray.
*
* @param {Array} args - function arguments
* @param {Function} fcn - unary function to apply
* @throws {Error} unrecognized option
* @returns {Array<Array>} results
*
* @example
* function fcn( x ) {
*     return x;
* }
*
* // TODO
*/
function unary( args, fcn ) {
	var opts;
	var x;
	var y;
	var o;
	var i;

	opts = {
		'nonnumeric': void 0,
		'nan': NaN,
		'pinf': Infinity,
		'ninf': -Infinity
	};
	x = args[ 0 ];
	y = args[ 1 ];
	for ( i = 2; i < args.length; i += 2 ) {
		o = args[ i ];
		if ( o === 'nonnumeric' || o === 'nan' || o === 'pinf' || o === 'ninf' ) {
			opts[ o ] = args[ i+1 ];
		} else {
			throw new Error( format( 'invalid argument. Unrecognized option name. Value: %s.', String( o ) ) );
		}
	}
	base( [ x, y ], wrap( fcn, opts ) );
	return y;
}


// EXPORTS //

module.exports = unary;

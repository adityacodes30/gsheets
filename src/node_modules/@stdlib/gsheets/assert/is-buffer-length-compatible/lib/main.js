/**
* @license Apache-2.0
*
* Copyright (c) 2022 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var base = require( '@stdlib/ndarray-base-assert-is-buffer-length-compatible' );


// MAIN //

/**
* Asserts if a buffer length is compatible with ndarray meta data.
*
* @param {NonNegativeInteger} len - buffer length
* @param {Array} shape - ndarray shape
* @param {Array} strides - ndarray strides
* @param {integer} offset - index offset
* @throws {Error} data buffer must be compatible with specified ndarray meta data
* @returns {void}
*
* @example
* var shape = [ 2, 2 ];
* var strides = [ 2, 1 ];
* var offset = 25;
*
* try {
*     isBufferLengthCompatible( 30, shape, strides, offset );
* } catch ( error ) {
*     console.error( error.message );
* }
*/
function isValidShape( len, shape, strides, offset ) {
	if ( shape.length && !base( len, shape, strides, offset ) ) {
		throw new Error( 'invalid arguments. Data buffer is incompatible with the specified ndarray meta data. Ensure that the offset is valid with regard to the strides array and that the data buffer has enough elements to satisfy the desired array shape.' );
	}
}


// EXPORTS //

module.exports = isValidShape;

[
  {
    "alias": "abs",
    "pkg": "math/base/special/abs",
    "pkg_desc": "Compute the absolute value",
    "desc": "Computes the absolute value",
    "dtypes": [
      "float64",
      "float64"
    ],
    "values": [
      -1.2,
      2.0,
      -3.1,
      -4.7,
      5.5,
      6.7
    ],
    "min": -10.0,
    "max": 10.0,
    "prng": "uniform"
  },
  {
    "alias": "abs2",
    "pkg": "math/base/special/abs2",
    "pkg_desc": "Compute the squared absolute value",
    "desc": "Computes the squared absolute value",
    "dtypes": [
      "float64",
      "float64"
    ],
    "values": [
      -1.2,
      2.0,
      -3.1,
      -4.7,
      5.5,
      6.7
    ],
    "min": -10.0,
    "max": 10.0,
    "prng": "uniform"
  },
  {
    "alias": "acos",
    "pkg": "math/base/special/acos",
    "pkg_desc": "Compute the arccosine of a number (in radians)",
    "desc": "Computes the arccosine of a number (in radians)",
    "dtypes": [
      "float64",
      "float64"
    ],
    "values": [
      1.0,
      0.707,
      0.866,
      -0.5,
      -3.5,
      1.7
    ],
    "min": -1.0,
    "max": 1.0,
    "prng": "uniform"
  },
  {
    "alias": "acosh",
    "pkg": "math/base/special/acosh",
    "pkg_desc": "Compute the hyperbolic arccosine",
    "desc": "Computes the hyperbolic arccosine",
    "dtypes": [
      "float64",
      "float64"
    ],
    "values": [
      1.0,
      2.0,
      2.5,
      3.1,
      4.6,
      4.8
    ],
    "min": 1.0,
    "max": 10.0,
    "prng": "uniform"
  },
  {
    "alias": "acot",
    "pkg": "math/base/special/acot",
    "pkg_desc": "Compute the inverse cotangent of a number (in radians)",
    "desc": "Computes the inverse cotangent of a number (in radians)",
    "dtypes": [
      "float64",
      "float64"
    ],
    "values": [
      2.0,
      0.707,
      0.866,
      -0.5,
      -3.5,
      1.7
    ],
    "min": -5.0,
    "max": 5.0,
    "prng": "uniform"
  },
  {
    "alias": "acovercos",
    "pkg": "math/base/special/acovercos",
    "pkg_desc": "Compute the inverse coversed cosine",
    "desc": "Computes the inverse coversed cosine",
    "dtypes": [
      "float64",
      "float64"
    ],
    "values": [
      0.0,
      -1.77,
      -1.5,
      -0.89,
      -0.74,
      -0.5
    ],
    "min": -2.0,
    "max": 0.0,
    "prng": "uniform"
  },
  {
    "alias": "acoversin",
    "pkg": "math/base/special/acoversin",
    "pkg_desc": "Compute the inverse coversed sine",
    "desc": "Computes the inverse coversed sine",
    "dtypes": [
      "float64",
      "float64"
    ],
    "values": [
      0.0,
      1.77,
      1.5,
      0.89,
      0.74,
      0.5
    ],
    "min": 0.0,
    "max": 2.0,
    "prng": "uniform"
  },
  {
    "alias": "acsc",
    "pkg": "math/base/special/acsc",
    "pkg_desc": "Compute the arccosecant",
    "desc": "Computes the arccosecant",
    "dtypes": [
      "float64",
      "float64"
    ],
    "values": [
      1.0,
      1.707,
      1.866,
      -1.5,
      -3.5,
      2.1
    ],
    "min": 1.0,
    "max": 10.0,
    "prng": "uniform"
  },
  {
    "alias": "acsch",
    "pkg": "math/base/special/acsch",
    "pkg_desc": "Compute the hyperbolic arccosecant",
    "desc": "Computes the hyperbolic arccosecant",
    "dtypes": [
      "float64",
      "float64"
    ],
    "values": [
      1.0,
      1.707,
      1.866,
      -1.5,
      -3.5,
      2.1
    ],
    "min": 1.0,
    "max": 10.0,
    "prng": "uniform"
  },
  {
    "alias": "ahavercos",
    "pkg": "math/base/special/ahavercos",
    "pkg_desc": "Compute the inverse half-value versed cosine",
    "desc": "Computes the inverse half-value versed cosine",
    "dtypes": [
      "float64",
      "float64"
    ],
    "values": [
      0.0,
      0.77,
      0.5,
      0.89,
      0.74,
      0.63
    ],
    "min": 0.0,
    "max": 1.0,
    "prng": "uniform"
  },
  {
    "alias": "ahaversin",
    "pkg": "math/base/special/ahaversin",
    "pkg_desc": "Compute the inverse half-value versed sine",
    "desc": "Computes the inverse half-value versed sine",
    "dtypes": [
      "float64",
      "float64"
    ],
    "values": [
      0.0,
      0.77,
      0.5,
      0.89,
      0.74,
      0.63
    ],
    "min": 0.0,
    "max": 1.0,
    "prng": "uniform"
  },
  {
    "alias": "asin",
    "pkg": "math/base/special/asin",
    "pkg_desc": "Compute the arcsine of a number (in radians)",
    "desc": "Computes the arcsine of a number (in radians)",
    "dtypes": [
      "float64",
      "float64"
    ],
    "values": [
      1.0,
      0.707,
      0.866,
      -0.5,
      -0.95,
      0.5
    ],
    "min": -1.0,
    "max": 1.0,
    "prng": "uniform"
  },
  {
    "alias": "asinh",
    "pkg": "math/base/special/asinh",
    "pkg_desc": "Compute the hyperbolic arcsine",
    "desc": "Computes the hyperbolic arcsine",
    "dtypes": [
      "float64",
      "float64"
    ],
    "values": [
      1.0,
      0.707,
      0.866,
      -2.5,
      -0.5,
      0.5
    ],
    "min": -5.0,
    "max": 5.0,
    "prng": "uniform"
  },
  {
    "alias": "atan",
    "pkg": "math/base/special/atan",
    "pkg_desc": "Compute the arctangent of a number",
    "desc": "Computes the arctangent of a number",
    "dtypes": [
      "float64",
      "float64"
    ],
    "values": [
      1.0,
      0.707,
      0.866,
      -0.5,
      -0.95,
      0.5
    ],
    "min": -2.0,
    "max": 2.0,
    "prng": "uniform"
  },
  {
    "alias": "atanh",
    "pkg": "math/base/special/atanh",
    "pkg_desc": "Compute the hyperbolic arctangent",
    "desc": "Computes the hyperbolic arctangent",
    "dtypes": [
      "float64",
      "float64"
    ],
    "values": [
      1.0,
      0.707,
      0.866,
      -0.5,
      -0.95,
      0.5
    ],
    "min": -1.0,
    "max": 1.0,
    "prng": "uniform"
  },
  {
    "alias": "avercos",
    "pkg": "math/base/special/avercos",
    "pkg_desc": "Compute the inverse versed cosine",
    "desc": "Computes the inverse versed cosine",
    "dtypes": [
      "float64",
      "float64"
    ],
    "values": [
      0.0,
      -0.77,
      -1.5,
      -0.89,
      -1.74,
      -0.5
    ],
    "min": -2.0,
    "max": 0.0,
    "prng": "uniform"
  },
  {
    "alias": "aversin",
    "pkg": "math/base/special/aversin",
    "pkg_desc": "Compute the inverse versed sine",
    "desc": "Computes the inverse versed sine",
    "dtypes": [
      "float64",
      "float64"
    ],
    "values": [
      0.0,
      0.77,
      1.5,
      0.89,
      1.74,
      0.5
    ],
    "min": 0.0,
    "max": 2.0,
    "prng": "uniform"
  },
  {
    "alias": "bernoulli",
    "pkg": "math/base/special/bernoulli",
    "pkg_desc": "Compute the nth Bernoulli number",
    "desc": "Computes the nth Bernoulli number",
    "dtypes": [
      "int32",
      "float64"
    ],
    "values": [
      0,
      1,
      2,
      3,
      4,
      5
    ],
    "min": 0,
    "max": 259,
    "prng": "discrete-uniform"
  },
  {
    "alias": "besselj0",
    "pkg": "math/base/special/besselj0",
    "pkg_desc": "Compute the Bessel function of the first kind of order zero",
    "desc": "Computes the Bessel function of the first kind of order zero",
    "dtypes": [
      "float64",
      "float64"
    ],
    "values": [
      0.0,
      0.77,
      1.5,
      0.89,
      1.74,
      0.5
    ],
    "min": 0.0,
    "max": 10.0,
    "prng": "uniform"
  },
  {
    "alias": "besselj1",
    "pkg": "math/base/special/besselj1",
    "pkg_desc": "Compute the Bessel function of the first kind of order one",
    "desc": "Computes the Bessel function of the first kind of order one",
    "dtypes": [
      "float64",
      "float64"
    ],
    "values": [
      0.0,
      0.77,
      1.5,
      0.89,
      1.74,
      0.5
    ],
    "min": 0.0,
    "max": 10.0,
    "prng": "uniform"
  },
  {
    "alias": "bessely0",
    "pkg": "math/base/special/bessely0",
    "pkg_desc": "Compute the Bessel function of the second kind of order zero",
    "desc": "Computes the Bessel function of the second kind of order zero",
    "dtypes": [
      "float64",
      "float64"
    ],
    "values": [
      0.0,
      0.77,
      1.5,
      0.89,
      1.74,
      0.5
    ],
    "min": 0.0,
    "max": 10.0,
    "prng": "uniform"
  },
  {
    "alias": "bessely1",
    "pkg": "math/base/special/bessely1",
    "pkg_desc": "Compute the Bessel function of the second kind of order one",
    "desc": "Computes the Bessel function of the second kind of order one",
    "dtypes": [
      "float64",
      "float64"
    ],
    "values": [
      0.0,
      0.77,
      1.5,
      0.89,
      1.74,
      0.5
    ],
    "min": 0.0,
    "max": 10.0,
    "prng": "uniform"
  },
  {
    "alias": "binet",
    "pkg": "math/base/special/binet",
    "pkg_desc": "Evaluate Binet's formula extended to real numbers",
    "desc": "Evaluates Binet's formula extended to real numbers",
    "dtypes": [
      "float64",
      "float64"
    ],
    "values": [
      0.0,
      1.0,
      2.0,
      3.0,
      3.14,
      0.5
    ],
    "min": 0,
    "max": 79,
    "prng": "discrete-uniform"
  },
  {
    "alias": "cbrt",
    "pkg": "math/base/special/cbrt",
    "pkg_desc": "Compute the cube root",
    "desc": "Computes the cube root",
    "dtypes": [
      "float64",
      "float64"
    ],
    "values": [
      64.0,
      27.0,
      0.0,
      -9.0,
      -27.0,
      8.0
    ],
    "min": -100.0,
    "max": 100.0,
    "prng": "uniform"
  },
  {
    "alias": "ceil",
    "pkg": "math/base/special/ceil",
    "pkg_desc": "Round a number toward positive infinity",
    "desc": "Rounds a number toward positive infinity",
    "dtypes": [
      "float64",
      "float64"
    ],
    "values": [
      0.0,
      100.77,
      11.5,
      10.89,
      11.74,
      3.123456
    ],
    "min": -50.0,
    "max": 50.0,
    "prng": "uniform"
  },
  {
    "alias": "ceil10",
    "pkg": "math/base/special/ceil10",
    "pkg_desc": "Round a number to the nearest power of 10 toward positive infinity",
    "desc": "Rounds a number to the nearest power of 10 toward positive infinity",
    "dtypes": [
      "float64",
      "float64"
    ],
    "values": [
      0.0,
      100.77,
      1.5,
      10.89,
      11.74,
      3.123456
    ],
    "min": -50.0,
    "max": 50.0,
    "prng": "uniform"
  },
  {
    "alias": "ceil2",
    "pkg": "math/base/special/ceil2",
    "pkg_desc": "Round a number to the nearest power of 2 toward positive infinity",
    "desc": "Rounds a number to the nearest power of 2 toward positive infinity",
    "dtypes": [
      "float64",
      "float64"
    ],
    "values": [
      -4.2,
      -4.5,
      9.9999,
      9.5,
      13.0,
      3.123456
    ],
    "min": -50.0,
    "max": 50.0,
    "prng": "uniform"
  },
  {
    "alias": "cos",
    "pkg": "math/base/special/cos",
    "pkg_desc": "Compute the cosine of a number (in radians)",
    "desc": "Computes the cosine of a number (in radians)",
    "dtypes": [
      "float64",
      "float64"
    ],
    "values": [
      0.0,
      0.75,
      -0.5,
      1.0,
      0.45,
      0.5
    ],
    "min": 0.0,
    "max": 6.28,
    "prng": "uniform"
  },
  {
    "alias": "sin",
    "pkg": "math/base/special/sin",
    "pkg_desc": "Compute the sine of a number (in radians)",
    "desc": "Computes the sine of a number (in radians)",
    "dtypes": [
      "float64",
      "float64"
    ],
    "values": [
      0.0,
      0.75,
      -0.5,
      1.0,
      0.45,
      0.5
    ],
    "min": 0.0,
    "max": 6.28,
    "prng": "uniform"
  },
  {
    "alias": "sqrt",
    "pkg": "math/base/special/sqrt",
    "pkg_desc": "Compute the principal root",
    "desc": "Computes the principal root",
    "dtypes": [
      "float64",
      "float64"
    ],
    "values": [
      64.0,
      27.0,
      0.0,
      81.0,
      100.0,
      9.0
    ],
    "min": 0.0,
    "max": 100.0,
    "prng": "uniform"
  },
  {
    "alias": "zeta",
    "pkg": "math/base/special/riemann-zeta",
    "pkg_desc": "Evaluate the Riemann zeta function as a function of a real variable",
    "desc": "Evaluates the Riemann zeta function as a function of a real variable",
    "dtypes": [
      "float64",
      "float64"
    ],
    "values": [
      1.2,
      2.0,
      3.1,
      4.7,
      5.5,
      6.7
    ],
    "min": 1.1,
    "max": 10.0,
    "prng": "uniform"
  }
]
